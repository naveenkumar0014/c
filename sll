#include<stdio.h>
#include<stdlib.h>
void insbeg();
void insend();
void inspos();
void delbeg();
void delend();
void delpos();
void delele();
void display();
struct node
{
    int data;
    struct node *link;
};
struct node *start=NULL;
int ele,pos,i;
struct node *ptr,*prev;
void main()
{
    int ch;
    do{
        printf("\n 1.insbeg\t2.del\t3.pos\t4.delbeg\t5.end\t6.pos\t7.ele\t8.display");
        printf("\n enter choice=");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:insbeg();break;
            case 2:insend();break;
            case 3:inspos();break;
            case 4:delbeg();break;
            case 5:delend();break;
            case 6:delpos();break;
            case 7:delele();break;
            case 8:display();break;
        }
        
    }while(ch>=1 && ch<=8);
}
void insbeg()
{
    printf("\n enter ele=");
    scanf("%d",&ele);
    struct node *temp=(struct node *)malloc(sizeof(struct node));
    temp->data=ele;
    temp->link=NULL;
    if(start==NULL)
    {
        start=temp;
    }
    else
    {
        temp->link=start;
        start=temp;
    }
}
void insend()
{
    printf("\n enter ele:");
    scanf("%d",&ele);
    struct node *temp=(struct node *)malloc(sizeof(struct node));
    temp->data=ele;
    temp->link=NULL;
    if(start==NULL)
    {
        start=temp;
        
    }
    else
    {
        ptr=start;
        while(ptr->link!=NULL)
        {
            ptr=ptr->link;
        }
        ptr->link=temp;
    }
}
void inspos()
{
    printf("\n enter ele and pos ");
    scanf("%d %d",&ele,&pos);
    struct node *temp=(struct node *)malloc(sizeof(struct node));
    temp->data=ele;
    temp->link=NULL;
    if(start==NULL)
    {
        if(pos==1)
        {
            start=temp;
        }
        else
        {
            printf("invalid pos");
            
        }
        
    }
    else
    {
        if(pos==1)
        {
            temp->link=start;
            start=temp;
        }
        else
        {
            ptr=start;
            for(i=1;i<pos-1 && ptr->link!=NULL;i++)
            {
                ptr=ptr->link;
            }
            if(i<pos-1)
            {
                printf("\n invalid pos");
            }
            else
            {
                temp->link=ptr->link;
                ptr->link=temp;
            }
        }
    }
}
void delbeg()
{
    if(start==NULL)
    {
        printf("\n list is empty");
    }
    else
    {
        ptr=start;
        start=start->link;
        free(ptr);
        
    }
}
void delend()
{
    if(start==NULL)
    {
        printf("\n list is empty");
        
    }
    else
    {
        ptr=start;
        if(start->link==NULL)
        {
            start=NULL;
            free(ptr);
        }
        else
        {
            while(ptr->link!=NULL)
            {
                prev=ptr;
                ptr=ptr->link;
            }
            prev->link=NULL;
            free(ptr);
        }
    }
}
void delpos()
{
    if(start==NULL)
    {printf("\n list empty");
        
    }
    else
    {
        printf("\n enter pos");
        scanf("%d",&pos);
        ptr=start;
        if(start->link==NULL)
        {
            if(pos==1)
            {
                start=NULL;
            }
            else{printf("\n invalid pos");
                
            }
        }
        else
        {
            if(pos==1)
            {
                start=start->link;
                free(ptr);
            }
            else
            {
                for(i=1;i<pos && ptr->link!=NULL;i++)
                {
                    prev=ptr;
                    ptr=ptr->link;
                }
                if(i<pos)
                {
                    printf("\n invalid pos");
                }
                else
                {
                    prev->link=ptr->link;
                    free(ptr);
                }
            }
        }
    }
}
void delele()
{
    if(start==NULL)
    {
        printf("\n list empty");
    }
    else
    {
        printf("\n enter ele=");
        scanf("%d",&ele);
        ptr=start;
        if(start->link==NULL)
        {
            if(start->data=ele)
            {
                start=NULL;
                free(ptr);
            }
            else
            {
                printf("\n ele not exist");
            }
        }
        else
        {
            if(start->data==ele)
            {
                start=start->link;
                free(ptr);
            }
            else
            {
                int c=0;
                while(ptr!=NULL)
                {
                    if(ptr->data=ele)
                    {
                        c=1;
                        break;
                    }
                    else
                    {
                        prev=ptr;
                        ptr=ptr->link;
                    }
                }
                if(c==1)
                {
                    prev->link=ptr->link;
                    free(ptr);
                }
                else
                {
                    printf("\n ele not exist");
                    
                }
            }
        }
    }
}
void display()
{
    if(start==NULL)
    {
        printf("list is empty");
        
    }
    else
    {
        printf("\n list ele are=");
        ptr=start;
        while(ptr!=NULL)
        {
            printf("%d\t",ptr->data);
            ptr=ptr->link;
        }
        printf("NULL");
    }
}
